{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.constants.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"html, body\\r\\n{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.game-container {\\r\\n    /* width: fit-content;\\r\\n    height: fit-content; */\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    margin: auto;\\r\\n    /* background-color: #47565A; */\\r\\n    /* box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22); */\\r\\n    /* border-radius: 5px; */\\r\\n  }\\r\\n\\r\\n.game-screen {\\r\\n    /* background-color: rgb(155,185,4); */\\r\\n    background-color: rgb(155,185,4);\\r\\n    position: absolute;\\r\\n    /* top: 135px;\\r\\n    left: 31px; */\\r\\n    /* padding: 0.75em 1.05em; */\\r\\n    top: calc(90vh * 135/600);\\r\\n    left: calc(90vh * 31/600);\\r\\n    padding: calc(90vh * 12/600) calc(90vh * 18/600);\\r\\n    z-index: -2;\\r\\n  }\\r\\n\\r\\n.game-board {\\r\\n    border: solid 1px rgb(54, 72, 0);\\r\\n  }\\r\\n\\r\\n.game-score {\\r\\n    /* font-family: 'Courier New', Courier, monospace; */\\r\\n    /* font-family: 'Press Start 2P', cursive; */\\r\\n    /* font-family: 'Chakra Petch', sans-serif; */\\r\\n    font-family: 'Eight Bit Dragon';\\r\\n    /* font-size: 10px; */\\r\\n    font-size: calc(90vh * 10/600);\\r\\n  }\\r\\n\\r\\n.row {\\r\\n    /* height: calc(90vh * 12/600 + 2px); */\\r\\n    height: calc(90vh * 12/600);\\r\\n\\r\\n    display: flex;\\r\\n    /* height: calc(90vh * 12/600); */\\r\\n    /* VERSÃO CLARA */\\r\\n    /* height: 26px; */\\r\\n  }\\r\\n\\r\\n.column {\\r\\n    /* border: 1px solid rgba(97, 131, 138, .1); */\\r\\n    width: calc(90vh * 12/600);\\r\\n    height: calc(90vh * 12/600);\\r\\n    /* width: 12px;\\r\\n    height: 12px; */\\r\\n    /* VERSÃO CLARA */\\r\\n    /* width: 24px;\\r\\n    height: 24px; */\\r\\n    /* display: inline-block; */\\r\\n    display: inline;\\r\\n  }\\r\\n\\r\\n.keypad {\\r\\n      width: 100%;\\r\\n      margin: auto;\\r\\n  }\\r\\n\\r\\n.row-buttons {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    display: block;\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n.arrow {\\r\\n      width: 80px;\\r\\n      height: 80px;\\r\\n      display: inline-block;\\r\\n      margin: auto;\\r\\n  }\\r\\n\\r\\n.arrow-hidden {\\r\\n    width: 80px;\\r\\n    height: 80px;\\r\\n    display: inline-block;\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n.bg-nokia {\\r\\n    position: absolute;\\r\\n    height: 90vh;\\r\\n    z-index: -1;\\r\\n  }\\r\\n\\r\\n/* VERSÃO CLARA */\\r\\n\\r\\n/* .head, .food {\\r\\n    position: absolute;\\r\\n    width: 36px;\\r\\n  }\\r\\n\\r\\n  .food {\\r\\n    transform: translateX(-6px) translateY(-6px);\\r\\n  }\\r\\n\\r\\n  .dir-left {\\r\\n    transform: translateX(-6px) translateY(-6px);\\r\\n  }\\r\\n\\r\\n  .dir-right {\\r\\n    transform: translateX(-6px) translateY(-6px) scaleX(-1);\\r\\n  }\\r\\n\\r\\n  .dir-up {\\r\\n    transform: translateX(-6px) translateY(-9px) rotateZ(90deg) scaleY(-1);\\r\\n  }\\r\\n\\r\\n  .dir-down {\\r\\n    transform: translateX(-6px) translateY(-9px) rotateZ(-90deg);\\r\\n  } */\\r\\n\"","module.exports = \"<!-- <div class=\\\"game-container\\\">\\n  <div class=\\\"game-header\\\">\\n    <h3 class=\\\"logo\\\">ngx-Snake</h3>\\n    <div class=\\\"score-block\\\">\\n      <h3 class=\\\"score\\\" [ngClass]=\\\"{'new-best-score': newBestScore}\\\">Score: {{score}}</h3>\\n      <h3 class=\\\"best-score\\\" [ngClass]=\\\"{'new-best-score': newBestScore}\\\">Best Score: {{best_score}}</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngFor=\\\"let column of board; let i = index;\\\">\\n    <div class=\\\"column\\\" [ngStyle]=\\\"{'background-color': setColors(i, j)}\\\" *ngFor=\\\"let row of column; let j = index\\\"></div>\\n  </div>\\n  <div class=\\\"start-button\\\" [ngClass]=\\\"{'disable-clicks': gameStarted}\\\" (click)=\\\"showMenu()\\\">Start Game</div>\\n  <div class=\\\"new-game-menu\\\" *ngIf=\\\"showMenuChecker\\\">\\n    <span class=\\\"new-game-menu-label\\\">Select Mode</span>\\n    <div class=\\\"start-button new-game-button\\\" (click)=\\\"newGame(mode)\\\" *ngFor=\\\"let mode of getKeys(all_modes)\\\">{{all_modes[mode]}}</div>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"game-container\\\">\\n  <!-- <img class=\\\"bg-nokia\\\" src=\\\"../assets/nokia2280p.png\\\"> -->\\n  <img class=\\\"bg-nokia\\\" src=\\\"../snake-n2280/assets/nokia2280p.png\\\">\\n  <div class=\\\"game-screen\\\">\\n  <div class=\\\"game-score\\\">{{score}}</div>\\n  <div class=\\\"game-board\\\">\\n    <div class=\\\"row\\\" *ngFor=\\\"let column of board; let i = index\\\">\\n      <div class=\\\"column\\\" [ngStyle]=\\\"{'background-color': setColors(i, j)}\\\" *ngFor=\\\"let row of column; let j = index\\\">\\n        <!-- VERSÃO CLARA -->\\n        <!-- <div>\\n          <img src=\\\"../snake-n2280/assets/clara.png\\\" class=\\\"head\\\" [ngClass]=\\\"{\\n            'dir-left': tempDirection == 37,\\n            'dir-right': tempDirection == 39,\\n            'dir-up': tempDirection == 38,\\n            'dir-down': tempDirection == 40\\n          }\\\" *ngIf=\\\"isHead(i, j)\\\">\\n          <img src=\\\"../snake-n2280/assets/burger.png\\\" class=\\\"food\\\" *ngIf=\\\"isFood(i, j)\\\">\\n        </div> -->\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n  <button id=\\\"start-button\\\" type=\\\"button\\\" (click)=\\\"newGame()\\\">Start</button>\\n  <!-- <div class=\\\"keypad\\\">\\n      <button id=\\\"start-button\\\" type=\\\"button\\\" (click)=\\\"newGame()\\\">Start</button>\\n      <button id=\\\"start-button\\\" type=\\\"button\\\" (click)=\\\"newGame()\\\">Start</button>\\n      <button id=\\\"start-button\\\" type=\\\"button\\\" (click)=\\\"newGame()\\\">Start</button>\\n    <div class=\\\"row-buttons\\\">\\n      <div class=\\\"arrow-hidden\\\"></div>\\n      <button class=\\\"arrow\\\" (click)=\\\"setDirection(38)\\\">↑</button>\\n      <div class=\\\"arrow-hidden\\\"></div>\\n    </div>\\n    <div class=\\\"row-buttons\\\">\\n      <button class=\\\"arrow\\\" (click)=\\\"setDirection(37)\\\">←</button>\\n      <div class=\\\"arrow-hidden\\\"></div>\\n      <button class=\\\"arrow\\\" (click)=\\\"setDirection(39)\\\">→</button>\\n    </div>\\n    <div class=\\\"row-buttons\\\">\\n      <div class=\\\"arrow-hidden\\\"></div>\\n      <button class=\\\"arrow\\\" (click)=\\\"setDirection(40)\\\">↓</button>\\n      <div class=\\\"arrow-hidden\\\"></div>\\n    </div>\\n  </div> -->\\n</div>\"","import { Component } from '@angular/core';\nimport { COLORS, CONTROLS, BOARD_WIDTH, BOARD_HEIGHT } from './app.constants';\n\n@Component({\n  selector: 'snake-n2280',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  host: {\n    '(document:keydown)': 'handleKeyboardEvents($event)'\n  }\n})\nexport class AppComponent {\n  title = 'snake-n2280';\n\n  private interval: number;\n  private tempDirection: number;\n  \n  public board = [];\n  public score = 0;\n\n\n  private snake = {\n    direction: CONTROLS.LEFT,\n    parts: [\n      {\n        // Initially it is not displayed\n        x: -1,\n        y: -1\n      }\n    ]\n  };\n\n  private fruit = {\n    // Initially it is not displayed\n    x: -1,\n    y: -1\n  };\n\n\n  constructor() {\n    this.setBoard();\n  }\n\n  setDirection(newDir: any): void {\n    if (newDir === CONTROLS.LEFT && this.snake.direction != CONTROLS.RIGHT) {\n      this.tempDirection = CONTROLS.LEFT;\n    } else if (newDir === CONTROLS.UP && this.snake.direction != CONTROLS.DOWN) {\n      this.tempDirection = CONTROLS.UP;\n    } else if (newDir === CONTROLS.RIGHT && this.snake.direction != CONTROLS.LEFT) {\n      this.tempDirection = CONTROLS.RIGHT;\n    } else if (newDir === CONTROLS.DOWN && this.snake.direction != CONTROLS.UP) {\n      this.tempDirection = CONTROLS.DOWN;\n    } \n  }\n\n  handleKeyboardEvents(e: KeyboardEvent) {\n    this.setDirection(e.keyCode);\n  }\n\n  setColors(col: number, row: number): string {\n    if (this.fruit.x === row && this.fruit.y === col) {\n      return COLORS.FRUIT;\n    } else if (this.snake.parts[0].x === row && this.snake.parts[0].y === col) {\n      return COLORS.SNAKE_HEAD;\n    } else if (this.board[col][row] === true) {\n      return COLORS.SNAKE_BODY;\n    }\n\n    return COLORS.BOARD;\n  };\n\n\n  // VERSÃO CLARA\n  // isHead(col: number, row: number): boolean {\n  //   if (this.snake.parts[0].x === row && this.snake.parts[0].y === col) {\n  //     return true;\n  //   }\n\n  //   return false;\n  // };\n  \n  // isFood(col: number, row: number): boolean {\n  //   if (this.fruit.x === row && this.fruit.y === col) {\n  //     return true;\n  //   }\n\n  //   return false;\n  // };\n\n  fruitCollision(part: any): boolean {\n    return (part.x === this.fruit.x && part.y === this.fruit.y);\n  }\n\n  selfCollision(part: any): boolean {\n    return (this.board[part.y][part.x] === true);\n  }\n\n  eatFruit(): void {\n    this.score++;\n\n    let newTail = Object.assign({}, this.snake.parts[this.snake.parts.length - 1]);\n\n    this.snake.parts.push(newTail);\n    this.resetFruit();\n  }\n\n  updatePositions(): void {\n    let newHead = this.repositionHead();\n    let me = this;\n\n    this.headTransition(newHead);\n    if (this.selfCollision(newHead))\n    {\n      alert(\"PERDEU!\");\n\n      return;\n    };\n\n    if (this.fruitCollision(newHead))\n    {\n      this.eatFruit();\n    }\n\n    let lastPart = this.snake.parts.pop();\n    this.board[lastPart.y][lastPart.x] = false;\n\n    this.snake.parts.unshift(newHead);\n    this.board[newHead.y][newHead.x] = true;\n\n    this.snake.direction = this.tempDirection;\n\n    setTimeout(() => {\n      me.updatePositions();\n    }, this.interval);\n  }\n\n  repositionHead(): any {\n    let newHead = Object.assign({}, this.snake.parts[0]);\n\n    if (this.tempDirection === CONTROLS.LEFT) {\n      newHead.x -= 1;\n    } else if (this.tempDirection === CONTROLS.RIGHT) {\n      newHead.x += 1;\n    } else if (this.tempDirection === CONTROLS.UP) {\n      newHead.y -= 1;\n    } else if (this.tempDirection === CONTROLS.DOWN) {\n      newHead.y += 1;\n    }\n\n    return newHead;\n  }\n\n  headTransition(part: any): void {\n    if (part.x === BOARD_WIDTH) {\n      part.x = 0;\n    } else if (part.x === -1) {\n      part.x = BOARD_WIDTH - 1;\n    }\n\n    if (part.y === BOARD_HEIGHT) {\n      part.y = 0;\n    } else if (part.y === -1) {\n      part.y = BOARD_HEIGHT - 1;\n    }\n  }\n\n  resetFruit(): void {\n    let x = this.randomWidth();\n    let y = this.randomHeight();\n\n    if (this.board[y][x] === true || (x === this.fruit.x && y === this.fruit.y))\n    {\n      return this.resetFruit();\n    }\n\n    this.fruit = {\n      x: x,\n      y: y\n    }\n  }\n\n  // Aux\n  randomHeight(): any {\n    return Math.floor(Math.random() * BOARD_HEIGHT);\n  }\n  \n  randomWidth(): any {\n    return Math.floor(Math.random() * BOARD_WIDTH);\n  }\n\n  \n  // Preparing the game\n  setBoard(): void {\n    this.board = [];\n\n    for (let i = 0; i < BOARD_HEIGHT; i++) {\n      this.board[i] = [];\n      for (let j = 0; j <  BOARD_WIDTH; j++)\n      {\n        this.board[i][j] = false; // indicates that the snake is not currently in this location\n      }\n    }\n\n  }\n\n  //\n  newGame(): void {\n    this.setBoard();\n    this.score = 0;\n    this.interval = 150;\n    this.tempDirection = CONTROLS.LEFT;\n    this.snake = {\n      direction: CONTROLS.LEFT,\n      parts: []\n    }\n\n    for (let i = 0; i < 3; i++)\n    {\n      this.snake.parts.push({ x: BOARD_WIDTH/2 + i, y: Math.floor(BOARD_HEIGHT/2)})\n    }\n\n    this.resetFruit();\n    this.updatePositions();\n    \n    \n  }\n}","export const BOARD_WIDTH = 14;\r\nexport const BOARD_HEIGHT = 10;\r\n// VERSÃO CLARA\r\n// export const BOARD_WIDTH = 12;\r\n// export const BOARD_HEIGHT = 7;\r\n\r\nexport const CONTROLS = {\r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    DOWN: 40\r\n  };\r\n\r\nexport const COLORS = {\r\n    GAME_OVER: '#D24D57',\r\n    FRUIT: '#EC644B',\r\n    SNAKE_HEAD: 'rgb(32,43,0)',\r\n    // SNAKE_HEAD: 'rgba(255,255,255,0)',\r\n    SNAKE_BODY: 'rgb(75,100,0)',\r\n    BOARD: 'rgb(155,185,4)',\r\n    OBSTACLE: '#383522'\r\n  };","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}